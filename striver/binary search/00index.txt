01. Binary Search (find an element)
02. Find the lower bound of an array (The lower bound is the smallest index, ind, where arr[ind] >= x)
03. Find the upper bound of an array (The upper bound is the smallest index, ind, where arr[ind] > x)
04. Search the index where the target value can be inserted in the array.
05. Find the floor and ceiling of x in arr[0..n-1].
    (The floor of x is the largest element in the array which is smaller than or equal to x.
    The ceiling of x is the smallest element in the array greater than or equal to x.)
06. Find the index of the last occurrence of the target key. If the target is not found then return -1.
07. Find the occurrences of element X in the given array.
08. Given an sorted array of size N and a target value k. Now the array is rotated at some pivot point unknown to you. Find the index at which k is present. 
09. Given an sorted array of size N. Now the array is rotated between 1 to N times which is unknown. Find the minimum element in the array.
10. Find out how many times the array has been rotated
11. Search Single Element in a sorted array
12. Find Peak element in Array('arr[i - 1]' < 'arr[i]' and 'arr[i + 1]' < 'arr[i]')
13. Find square root of a number. If ‘n’ is not a perfect square, then return the floor value of 'sqrt(n)'.
14. Nth Root of a Number
15.  A monkey is given ‘n’ piles of bananas, whereas the 'ith' pile has ‘a[i]’ bananas. An integer ‘h’ is also given, which denotes the time (in hours) for all the bananas to be eaten.
• Each hour, the monkey chooses a non-empty pile of bananas and eats ‘k’ bananas. If the pile contains less than ‘k’ bananas, then the monkey consumes all the bananas and won’t eat any more bananas in that hour.
• Find the minimum number of bananas ‘k’ to eat per hour so that the monkey can eat all the bananas within ‘h’ hours.
16. You are given 'N’ roses and you are also given an array 'arr'  where 'arr[i]'  denotes that the 'ith' rose will bloom on the 'arr[i]th' day.
• You can only pick already bloomed roses that are adjacent to make a bouquet. You are also told that you require exactly 'k' adjacent bloomed roses to make a single bouquet.
• Find the minimum number of days required to make at least ‘m' bouquets each containing 'k' roses. Return -1 if it is not possible.
17. Find the Smallest Divisor Given a Threshold
18. You are the owner of a Shipment company. You use conveyor belts to ship packages from one port to another. The packages must be shipped within 'd' days.
• The weights of the packages are given in an array 'of weights'. The packages are loaded on the conveyor belts every day in the same order as they appear in the array. The loaded weights must not exceed the maximum weight capacity of the ship.
• Find out the least-weight capacity so that you can ship all the packages within 'd' days.
19. Find Kth Missing Positive Number
20. You are given an array 'arr' of size 'n' which denotes the position of stalls.
• You are also given an integer 'k' which denotes the number of aggressive cows.
• You are given the task of assigning stalls to 'k' cows such that the minimum distance between any two of them is the maximum possible.
• Find the maximum possible minimum distance.
21. Given an array ‘arr of integer numbers, ‘ar[i]’ represents the number of pages in the ‘i-th’ book. There are a ‘m’ number of students, and the task is to allocate all the books to the students.
• Allocate books in such a way that:
- Each student gets at least one book.
- Each book should be allocated to only one student.
- Book allocation should be in a contiguous manner.
• You have to allocate the book to ‘m’ students such that the maximum number of pages assigned to a student is minimum. If the allocation of books is not possible. return -1
22. Split array largest sum / Painter's problem
Given an integer array ‘A’ of size ‘N’ and an integer ‘K'. Split the array ‘A’ into ‘K’ non-empty subarrays such that the largest sum of any subarray is minimized. Your task is to return the minimized largest sum of the split.
23. You are given a sorted array ‘arr’ of length ‘n’, which contains positive integer positions of ‘n’ gas stations on the X-axis. You are also given an integer ‘k’. You have to place 'k' new gas stations on the X-axis. You can place them anywhere on the non-negative side of the X-axis, even on non-integer positions. Let 'dist' be the maximum value of the distance between adjacent gas stations after adding k new gas stations.
Find the minimum value of ‘dist’.
Answers within 10^-6 of the actual answer will be accepted